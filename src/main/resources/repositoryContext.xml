<?xml version="1.0" encoding="windows-1251"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:tx="http://www.springframework.org/schema/tx"
       
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">
                           <!--http://www.springframework.org/schema/jdbc-->
                           <!--http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">-->
    
    <context:component-scan base-package="com.preproduction.delivery.repository" />        
    
<!--    <jdbc:embedded-database id="dataSource" type="H2">
    </jdbc:embedded-database>-->
    
    <!--<context:property-placeholder location="classpath:/jdbc.properties" />-->
    
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${user}" />
        <property name="password" value="${password}" />
        <property name="initialSize" value="5" />
    </bean>
       
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="com.preproduction.delivery.domain" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>-->
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
<!--    <bean name="pizzaFactoryBean" class="com.preproduction.delivery.infrastructure.PizzaFactoryBean">
        <property name="id" value="1" />
        <property name="name" value="Sea" />
        <property name="price" value="20" />
        <property name="type" value="Sea" />
    </bean> -->
    
<!--    <bean id = "pizzaRepo" class = "com.preproduction.delivery.repository.InMemPizzaRepository"
          init-method="init">
        <property name="pizzasDB">
            <map>
                <entry key="1">
                    <bean class="com.preproduction.delivery.domain.Pizza">
                        <constructor-arg value="1"/>
                        <constructor-arg value="Sea"/>
                        <constructor-arg value="12" />
                        <constructor-arg value="Sea"/>
                    </bean>
                </entry>
                <entry key="2">
                    <bean class="com.preproduction.delivery.domain.Pizza">
                        <constructor-arg value="2"/>
                        <constructor-arg value="Meat"/>
                        <constructor-arg value="13" />
                        <constructor-arg value="Meat"/>
                    </bean>
                </entry>
                <entry key="3">
                    <bean class="com.preproduction.delivery.domain.Pizza">
                        <constructor-arg value="3"/>
                        <constructor-arg value="Vegetarian"/>
                        <constructor-arg value="14" />
                        <constructor-arg value="Vegetarian"/>
                    </bean>
                </entry>
            </map>            
        </property>
    </bean>-->   

</beans>
